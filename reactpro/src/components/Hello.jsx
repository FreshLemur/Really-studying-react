function Hello(props) {
  // props.name = "Some name"; Якщо ми спробуємо переприсвоїти значення пропсу, то це просто буде помилка, тому що це не можливо.
  // Фактично, пропси доступні лише для читання, тому їх не можна мутувати чи змінювати.
  // Ми не можемо змінювати пропси всередині компонентів, тому вони і називаються незмінними.
  return (
    <div>
      <h1>
        {props.message} {props.name} {props.emoji}
      </h1>
    </div>
  );
}
export default Hello;

// function Hello({name, message, emoji}) {
//   // props.name = "Some name"; Якщо ми спробуємо переприсвоїти значення пропсу, то це просто буде помилка, тому що це не можливо.
//   return (
//     <div>
//       <h1>
//         {message} {name} {emoji}
//       </h1>
//     </div>
//   );
// }
// export default Hello;
// Це деструктуризація, зараз вона нам не потрібна.